plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'io.github.ran'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.lingala.zip4j:zip4j:2.11.5'
}

graalvmNative {
    binaries {
        main {
            sharedLibrary = true
            useFatJar = true
            buildArgs.addAll([
                    '-H:+UnlockExperimentalVMOptions',
                    '-H:Name=zip4j-abi',
                    '--no-fallback',
                    '-O9',
                    '-march=compatibility'
            ])

            // Add platform-specific static linking for zlib
            if (System.getProperty("os.name").toLowerCase().contains("linux")) {
                // Linux: Use -Bstatic/-Bdynamic for selective static linking
                buildArgs.addAll([
                    '-H:+StaticExecutableWithDynamicLibC',  // Enable static linking of system libraries
                    '-H:NativeLinkerOption=-Wl,-Bstatic',   // Force static linking for following libs
                    '-H:NativeLinkerOption=-lz',            // Link zlib statically
                    '-H:NativeLinkerOption=-Wl,-Bdynamic'   // Return to dynamic linking for system libs
                ])
            }
        }
        test {
            buildArgs.addAll([
                    '-H:+UnlockExperimentalVMOptions',
                    '--no-fallback',
                    '-Ob',
                    '-H:+ReportExceptionStackTraces'
            ])
        }
    }
}

test { // Always use nativeTest instead of test
    useJUnitPlatform()
    ignoreFailures = true // we'll get failures when running tests in regular mode
}
test.finalizedBy nativeTest
